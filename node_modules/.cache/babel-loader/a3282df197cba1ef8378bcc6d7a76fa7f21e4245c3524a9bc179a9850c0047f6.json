{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.string.includes.js\";\nexport default {\n  name: 'SignupForm',\n  data: function data() {\n    return {\n      email: 'mario',\n      password: '',\n      role: 'designer',\n      terms: false,\n      tempSkill: '',\n      skills: [],\n      passwordError: ''\n    };\n  },\n  methods: {\n    addSkill: function addSkill(e) {\n      if (e.key === ' ' && this.tempSkill) {\n        if (!this.skills.includes(this.tempSkill)) {\n          this.skills.push(this.tempSkill);\n        }\n        this.tempSkill = '';\n      }\n    },\n    removeSkill: function removeSkill(skill) {\n      this.skills = this.skills.filter(function (item) {\n        return skill !== item;\n      });\n    },\n    handleSubmit: function handleSubmit() {\n      // validate password\n      this.passwordError = this.passowrd.length > 5 ? '' : 'Password must be at least 6 chars long';\n    }\n  },\n  mounted: function mounted() {\n    // Code to run when the component is mounted\n  }\n};","map":{"version":3,"names":["name","data","email","password","role","terms","tempSkill","skills","passwordError","methods","addSkill","e","key","includes","push","removeSkill","skill","filter","item","handleSubmit","passowrd","length","mounted"],"sources":["/Users/rubenweijers/Desktop/web-form/src/components/SignupForm.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"handleSubmit\">\n        <label>Email:</label>\n        <input type=\"email\" required v-model=\"email\">\n\n        <label>Password:</label>\n        <input type=\"password\" required v-model=\"password\">\n   \n        <label>Role:</label>\n        <select v-model=\"role\">\n            <option value=\"developer\">Web Developer</option>\n            <option value=\"designer\">Web Designer</option>\n        </select>\n\n        <label>Skills:</label>\n        <input type=\"text\" v-model=\"tempSkill\" @keyup=\"addSkill\">\n        <div v-for=\"skill in skills\" :key=\"skill\" class=\"pill\">\n            <p @click=\"removeSkill(skill)\">{{ skill }}</p>\n        </div>\n\n        <div class=\"terms\">\n            <input type=\"checkbox\" required v-model=\"terms\">\n            <label>Accept terms and conditions</label>\n        </div>\n\n        <div class=\"submit\">\n            <button>Create an account</button>\n        </div>\n\n    </form>\n    <p>Email: {{ email }}</p>\n    <p>Password: {{ password }}</p>\n    <p>Role: {{ role }}</p>\n    <p>Terms: {{ terms }}</p>\n</template>\n\n<script>\nexport default {\n    name: 'SignupForm',\n    data() {\n        return {\n            email: 'mario',\n            password: '',\n            role: 'designer',\n            terms: false,\n            tempSkill: '',\n            skills: [],\n            passwordError: ''\n\n        };\n    },\n    methods: {\n        addSkill(e) {\n            if (e.key === ' ' && this.tempSkill) {\n                if (!this.skills.includes(this.tempSkill)) {\n                    this.skills.push(this.tempSkill)\n                }\n                this.tempSkill = ''\n            }\n        },\n        removeSkill(skill) {\n            this.skills = this.skills.filter((item) => {\n                return skill !== item\n            })\n        },\n        handleSubmit() {\n            // validate password\n            this.passwordError = this.passowrd.length > 5 ?\n            '' : 'Password must be at least 6 chars long'\n\n        }\n    },\n    mounted() {\n        // Code to run when the component is mounted\n    },\n};\n</script>\n\n<style scoped>\n    form {\n        max-width: 420px;\n        margin: 30px auto;\n        background: rgb(255, 255, 255);\n        text-align: left;\n        padding: 40px;\n        border-radius: 10px;\n    }\n    label {\n        color: #000000;\n        display: inline-block;\n        margin: 25px 0 15px;\n        font-size: 0.6em;\n        text-transform: uppercase;\n        letter-spacing: 1px;\n        font-weight: bold;\n    }\n    input, select {\n        display: block;\n        padding: 10px 6px;\n        width: 100%;\n        box-sizing: border-box;\n        border: none;\n        border-bottom: 1px solid #ddd;\n        color: #555;\n    }\n    input[type=\"checkbox\"] {\n        display: inline-block;\n        width: 16px;\n        margin: 0 10px 0 0;\n        position: relative;\n        top: 2px;\n    }\n    .pill {\n        display: inline-block;\n        margin: 20px 10px 0 0;\n        padding: 6px 12px;\n        background: #eee;\n        border-radius: 20px;\n        font-size: 12px;\n        letter-spacing: 1px;\n        font-weight: bold;\n        color: #777;\n        cursor: pointer;\n    }\n    button {\n        background: #0b7dff;\n        border: 0;\n        padding: 10px 20px;\n        margin-top: 20px;\n        color: white;\n        border-radius: 20px;\n    }\n    .submit {\n        text-align: center;\n    }\n</style>"],"mappings":";;;;;AAqCA,eAAe;EACXA,IAAI,EAAE,YAAY;EAClBC,IAAI,WAAAA,KAAA,EAAG;IACH,OAAO;MACHC,KAAK,EAAE,OAAO;MACdC,QAAQ,EAAE,EAAE;MACZC,IAAI,EAAE,UAAU;MAChBC,KAAK,EAAE,KAAK;MACZC,SAAS,EAAE,EAAE;MACbC,MAAM,EAAE,EAAE;MACVC,aAAa,EAAE;IAEnB,CAAC;EACL,CAAC;EACDC,OAAO,EAAE;IACLC,QAAQ,WAAAA,SAACC,CAAC,EAAE;MACR,IAAIA,CAAC,CAACC,GAAE,KAAM,GAAE,IAAK,IAAI,CAACN,SAAS,EAAE;QACjC,IAAI,CAAC,IAAI,CAACC,MAAM,CAACM,QAAQ,CAAC,IAAI,CAACP,SAAS,CAAC,EAAE;UACvC,IAAI,CAACC,MAAM,CAACO,IAAI,CAAC,IAAI,CAACR,SAAS;QACnC;QACA,IAAI,CAACA,SAAQ,GAAI,EAAC;MACtB;IACJ,CAAC;IACDS,WAAW,WAAAA,YAACC,KAAK,EAAE;MACf,IAAI,CAACT,MAAK,GAAI,IAAI,CAACA,MAAM,CAACU,MAAM,CAAC,UAACC,IAAI,EAAK;QACvC,OAAOF,KAAI,KAAME,IAAG;MACxB,CAAC;IACL,CAAC;IACDC,YAAY,WAAAA,aAAA,EAAG;MACX;MACA,IAAI,CAACX,aAAY,GAAI,IAAI,CAACY,QAAQ,CAACC,MAAK,GAAI,IAC5C,EAAC,GAAI,wCAAuC;IAEhD;EACJ,CAAC;EACDC,OAAO,WAAAA,QAAA,EAAG;IACN;EAAA;AAER,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}